package com.marketplace.affliate.video.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AiToolAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAiToolAllPropertiesEquals(AiTool expected, AiTool actual) {
        assertAiToolAutoGeneratedPropertiesEquals(expected, actual);
        assertAiToolAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAiToolAllUpdatablePropertiesEquals(AiTool expected, AiTool actual) {
        assertAiToolUpdatableFieldsEquals(expected, actual);
        assertAiToolUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAiToolAutoGeneratedPropertiesEquals(AiTool expected, AiTool actual) {
        assertThat(expected)
            .as("Verify AiTool auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAiToolUpdatableFieldsEquals(AiTool expected, AiTool actual) {
        assertThat(expected)
            .as("Verify AiTool relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getVendor()).as("check vendor").isEqualTo(actual.getVendor()))
            .satisfies(e -> assertThat(e.getLinkUrl()).as("check linkUrl").isEqualTo(actual.getLinkUrl()))
            .satisfies(e -> assertThat(e.getIsActive()).as("check isActive").isEqualTo(actual.getIsActive()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getCreatedOn()).as("check createdOn").isEqualTo(actual.getCreatedOn()))
            .satisfies(e -> assertThat(e.getUpdatedBy()).as("check updatedBy").isEqualTo(actual.getUpdatedBy()))
            .satisfies(e -> assertThat(e.getUpdatedOn()).as("check updatedOn").isEqualTo(actual.getUpdatedOn()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAiToolUpdatableRelationshipsEquals(AiTool expected, AiTool actual) {
        // empty method
    }
}
