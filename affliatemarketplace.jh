
entity VideoUser {
	userId String
    userName String
    name String
    phone Long min(1000000000) max(9999999999)
    email String pattern(/^(.+)@(.+)$/)
    description String
    imageUrl String
    userType VideoUserType
    isBlocked Boolean
    blockedTill LocalDate
    isActive Boolean
    createdBy String
    createdOn LocalDate
    updatedBy String
    updatedOn LocalDate
}

enum VideoUserType {
    SuperAdmin,
    Moderator,
    CorporateAdmin,
    NormalUser
}

entity BankDetails {
	name String
    accountNo String
    bankName String
    ifsc String
    proofUrl String
    isActive Boolean
    createdBy String
    createdOn LocalDate
    updatedBy String
    updatedOn LocalDate
}

relationship OneToOne {
	VideoUser{bank} to BankDetails{user}
}

entity Contact {
	message String
    isContactViewed Boolean
    isFollowed Boolean
    isDeleted Boolean
    isActive Boolean
    createdBy String
    createdOn LocalDate
    updatedBy String
    updatedOn LocalDate
}

relationship ManyToOne {
	Contact{sender} to VideoUser{contactsMade}
}

relationship ManyToOne {
	Contact{receiver} to VideoUser{contactsReceived}
}

entity VideoPost {
	title String
    description String
    url String
    urlType UrlType
    isAIGenerated Boolean
    isPremium Boolean
    isBlocked Boolean
    isModerated Boolean
    isActive Boolean
    createdBy String
    createdOn LocalDate
    updatedBy String
    updatedOn LocalDate
}

enum UrlType {
	YouTube,
    Instagram,
    LocalVideoUpload
}

relationship OneToMany {
	VideoUser{posts} to VideoPost{creator}
}

entity VideoTag {
	name String
    code String
    isModerated Boolean
    isDeleted Boolean
    deletionReason Boolean
    mergedWithTagName String
    mergedWithTagCode String
    isActive Boolean
    createdBy String
    createdOn LocalDate
    updatedBy String
    updatedOn LocalDate
}

relationship ManyToMany {
	VideoPost{tags} to VideoTag{posts}
}

entity Sponsor {
	sponsorName String
    sponsorDescription String
    sponsorBanner1Url String
    sponsorBanner2Url String
    sponsorBanner3Url String
    sponsorExternalUrl String
    sponsorLogoUrl String
    isActive Boolean
    createdBy String
    createdOn LocalDate
    updatedBy String
    updatedOn LocalDate
}

relationship OneToMany {
	Sponsor{adminUsers} to VideoUser{company}
}

entity Competition {
	title String
    description String
    status CompetitionStatus
    status CompetitionPaymentStatus
    isBlocked Boolean
    blockReason String
    blockedBy String
    isPaused Boolean
    pauseReason String
    pausedBy String
    banner1Url String
    banner2Url String
    banner3Url String
    startDate LocalDate
    endDate LocalDate
    landingUrl String
    totalPrizeValue Double
    invoiceToSponsorUrl String
    tncUrl String
    tnc String
    isActive Boolean
    createdBy String
    createdOn LocalDate
    updatedBy String
    updatedOn LocalDate
}

enum CompetitionStatus {
	Draft,
    Scheduled,
    Active,
    Blocked,
    Paused,
    ClosedWinnersPending,
    ClosedWinnersSelected,
    ClosedWinnersAnnounced
}

enum CompetitionPaymentStatus {
    PaymentPendingFromSponsor,
    PaymentReceivedFromSponsor,
    PartialPaymentReceivedFromSponsor,
    PaymentRemittedToWinners
}

relationship OneToMany {
	Sponsor{sponsoredCompetitions} to Competition{sponsor}
}

relationship ManyToOne {
	VideoPost{competition} to Competition{competitionPosts}
}

entity Prize {
	prizeType PrizeType
    prizeTag String
    prizeDetails String
    prizeValueType PrizeValueType
    prizeValue Double
    countOfPossibleWinners Long
    isActive Boolean
    createdBy String
    createdOn LocalDate
    updatedBy String
    updatedOn LocalDate
}

enum PrizeType {
	Individual,
    Group
}

enum PrizeType {
	Money,
    Other
}

relationship OneToMany {
	Competition{prizes} to Prize{competition}
}

entity CompetitionWinner {
	prizeTitle String
    citation String
    certificateUrl String
    selectedBy String
    selectionReason String
    isActive Boolean
    createdBy String
    createdOn LocalDate
    updatedBy String
    updatedOn LocalDate
}

relationship OneToMany {
	Prize{winners} to CompetitionWinner{competitionPrize}
}

relationship OneToOne {
	CompetitionWinner{winningPost} to VideoPost{competitionWinner}
}

entity CompetitionPaymentFromSponsor {
	amount Double
    transactionId String
    transactionScreenshotUrl String
    transactionDate LocalDate
    transactionStatus TransactionStatus
    paidBy String
    paymentReceiptUrl String
    isActive Boolean
    createdBy String
    createdOn LocalDate
    updatedBy String
    updatedOn LocalDate
}

enum TransactionStatus {
	Initiated,
    Received
}

relationship OneToMany {
	Competition{paymentsFromSponsor} to CompetitionPaymentFromSponsor{competition}
}

entity CompetitionPaymentToWinner {
	prizeTitle String
    prizeAmount Double
    tdsAmount Double
    tdsCertificateUrl Double
    otherDeductionAmount Double
    deductionReason String
    deductionJsonData String
	deductionCertificateUrl Double
    paidAmount Double
    transactionId String
    transactionScreenshotUrl String
    transactionDate LocalDate
    transactionStatus TransactionStatus
    paidBy String
    isActive Boolean
    createdBy String
    createdOn LocalDate
    updatedBy String
    updatedOn LocalDate
}

relationship OneToOne {
	CompetitionWinner{paymentToWinner} to CompetitionPaymentToWinner{winner}
}

entity Review {
	isLiked Boolean
    isSkipped Boolean
    isDisliked Boolean
    isWatched Boolean
    isFullyWatched Boolean
    isReported Boolean
    rating Long min(1) max(5)
    comment String
    reportReason String
    isBlocked Boolean
    isModerated Boolean
    isActive Boolean
    createdBy String
    createdOn LocalDate
    updatedBy String
    updatedOn LocalDate
}

enum ReportType {
	Abusive,
    Nuidity,
    Hetrated,
    Violence,
    Hate,
    Threats,
    SelfHarm,
    ChildAbuse,
    OtherHarmful,
    Harassment,
    Bullying,
    Cyberbullying,
    PersonalAttack,
    Doxing,
    OtherDangerous,
    NonConsensual,
    PIIData,
    Misinformation,
    Spam,
    FalseInformation, 
    PrivacyViolations,
    DeceptivePractices,
    OtherIntellectualPropertyIssues,
    TrademarkViolation,
    CopyrightInfringement,
    Other
}

relationship OneToMany {
	VideoUser{reviews} to Review{reviewer}
}

relationship OneToMany {
	VideoPost{reviews} to Review{post}
}

entity Affinity {
	segment Segment
	score Long
    isActive Boolean
    createdBy String
    createdOn LocalDate
    updatedBy String
    updatedOn LocalDate	
}

enum Segment {
	A,
    B,
    C,
    D,
    E,
    F,
    G,
    H,
    I,
    J,
    K
}

relationship ManyToMany {
	VideoPost{affinityVectors} to Affinity{posts},
    VideoUser{affinityVectors} to Affinity{users}
}

entity VideoPostChangeHistory {
	changeType ChangeType
	oldtitle String
    oldDescription String
    oldUrl String
    oldUrlType UrlType
    oldIsAIGenerated Boolean
    oldIsPremium Boolean
    oldIsBlocked Boolean
    oldIsModerated Boolean
    oldIsActive Boolean
    oldCreatedBy String
    oldCreatedOn LocalDate
    oldUpdatedBy String
    oldUpdatedOn LocalDate
}

enum ChangeType {
	ModeratorUpdateContent,
    ModeratorUpdateActiveStatus,
    UserUpdateContent,
    UserUpdateUrl,
    UserChangeActiveStatus
}

relationship OneToMany {
	VideoPost{changesHistory} to VideoPostChangeHistory{post}
}

entity ReviewChangeHistory {
	changeType ChangeType
	oldIsLiked Boolean
    oldIsSkipped Boolean
    oldIsDisliked Boolean
    oldIsWatched Boolean
    oldIsFullyWatched Boolean
    oldIsReported Boolean
    oldRating Long min(1) max(5)
    oldComment String
    oldReportReason String
    oldIsBlocked Boolean
    oldIsModerated Boolean
    oldIsActive Boolean
    oldCreatedBy String
    oldCreatedOn LocalDate
    oldUpdatedBy String
    oldUpdatedOn LocalDate
}

relationship OneToMany {
	Review{changesHistory} to ReviewChangeHistory{review}
}

entity AiTool {
	name String
    description String
    vendor String
    linkUrl String
    isActive Boolean
    createdBy String
    createdOn LocalDate
    updatedBy String
    updatedOn LocalDate
}

entity AiToolSession {
	isPaymentLinkGenerated Boolean
	isPaid Boolean
    isVideoGenerated Boolean
    isVideoGenerated Boolean
    isActive Boolean
    createdBy String
    createdOn LocalDate
    updatedBy String
    updatedOn LocalDate
}

relationship OneToMany {
	VideoUser{aiSessions} to AiToolSession{user}
}

relationship OneToMany {
	AiTool{aiSessions} to AiToolSession{tool}
}

entity AiToolChat {
	message String
    videoUrl String
    paymentUrl String
    type ChatType
    isFinalVidel Boolean
    isDownloaded Boolean
    isActive Boolean
    createdBy String
    createdOn LocalDate
    updatedBy String
    updatedOn LocalDate
}

enum ChatType {
	UserMessage,
    AiResponse,
    GeneratedVideo,
    PaymentRequest,
    PaymentStatus
}

relationship OneToMany {
	AiToolSession{chats} to AiToolChat{session}
}

entity AiToolPayment {
	amount Double
    status PaymentStatus
    paymentLinkUrl String
    pgType PgType
    pgId String
    pgStatus String
    pgRequestJson String
    pgResponseJson String
    pgRequestTimeStamp String
    pgResponseTimeStamp String
    isActive Boolean
    createdBy String
    createdOn LocalDate
    updatedBy String
    updatedOn LocalDate
}

enum PgType {
	RazorPay,
    PayU,
    PayTM
}

enum PaymentStatus {
	Initiate,
    PendingOnPg,
    Success,
    Failed
}

relationship OneToMany {
	AiToolSession{payments} to AiToolPayment{session}
}